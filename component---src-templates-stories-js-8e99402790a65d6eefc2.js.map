{"version":3,"sources":["webpack://protoproto/./src/templates/stories.js"],"names":["_ref","entry","data","craftStoriesIndexStoriesIndexEntry","seomatic","storyCollections","StoryBlock","useMemo","_ref2","image","comingSoon","title","eager","React","GatsbyImage","className","loading","alt","Layout","showNav","length","map","_ref3","i","featureImage","story","img","key","TransitionLink","to","uri","getImage","localFile"],"mappings":"gKAmIA,UA5HoB,SAAHA,GAAkB,IACWC,EADnBD,EAAJE,KACbC,mCACAC,EAA+BH,EAA/BG,SAAUC,EAAqBJ,EAArBI,iBAGZC,GAAaC,cACjB,kBACE,SAAAC,GAAA,IAAGC,EAAKD,EAALC,MAAOC,EAAUF,EAAVE,WAAYC,EAAKH,EAALG,MAAOC,EAAKJ,EAALI,MAAK,OAE9BC,2BAAA,KACEA,gBAACC,IAAW,CACVL,MAAOA,EACPM,UAAS,kBACPL,EAAa,mBAAqB,IAEpCM,QAASJ,EAAK,eACdK,IAAI,KAENJ,gBAAA,OAAKE,UAAU,4EACbF,gBAAA,OAAKE,UAAU,kBAAkBJ,UAAK,IACrCD,GAAcG,gBAAA,OAAKE,UAAU,uBAAsB,oBAI9D,IAGF,OACEF,gBAACK,IAAM,CAACC,SAAS,EAAMf,SAAUA,GAC/BS,gBAAA,OAAKE,UAAU,oDACbF,gBAAA,OAAKE,UAAU,gBACbF,gBAAA,OAAKE,UAAU,8CAEZV,EAAiBe,OAAS,GACzBf,EAAiBgB,KAAI,SAAAC,EAAsCC,GAAO,IAA1CC,EAAYF,EAAZE,aAAcvB,EAAKqB,EAALrB,MAAOS,EAAUY,EAAVZ,WACpCe,EAASxB,EAAK,GACdyB,EAAOF,EAAY,GAE1B,OACEX,gBAAA,OACEc,IAAKJ,EACLR,UAAS,kCACPL,EAAa,YAAc,MAI3BA,GACAG,gBAACe,IAAc,CACbD,IAAKJ,EACLM,GAAE,KAAMJ,GAASA,EAAMK,IAAML,EAAMK,IAAG,KAEtCjB,gBAACP,EAAU,CACTG,OAAOsB,OAASL,aAAG,EAAHA,EAAKM,WACrBrB,MAAOc,aAAK,EAALA,EAAOd,MACdD,WAAYA,EACZE,MAAOW,EAAI,KAMhBb,GACCG,gBAACP,EAAU,CACTG,OAAOsB,OAASL,aAAG,EAAHA,EAAKM,WACrBrB,MAAOc,aAAK,EAALA,EAAOd,MACdD,WAAYA,EACZE,MAAOW,EAAI","file":"component---src-templates-stories-js-8e99402790a65d6eefc2.js","sourcesContent":["import React, { useMemo } from \"react\"\nimport { graphql } from \"gatsby\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\n\nimport Layout from \"@components/Layout\"\nimport TransitionLink from \"../components/TransitionLink\"\n\nconst StoriesPage = ({ data }) => {\n  const { craftStoriesIndexStoriesIndexEntry: entry } = data\n  const { seomatic, storyCollections } = entry\n\n  /* Story block component: either a link or static image */\n  const StoryBlock = useMemo(\n    () =>\n      ({ image, comingSoon, title, eager }) =>\n        (\n          <>\n            <GatsbyImage\n              image={image}\n              className={`w-full h-full ${\n                comingSoon ? \"image--greyscale\" : \"\"\n              }`}\n              loading={eager ? `eager` : `lazy`}\n              alt=\"\"\n            />\n            <div className=\"flex absolute top-1/2 left-1/2 lg:text-2xl md:text-xl text-2xl uppercase\">\n              <div className=\"flex-1 stories\">{title ?? ``}</div>\n              {comingSoon && <div className=\"stories text-center\">Coming Soon</div>}\n            </div>\n          </>\n        ),\n    []\n  )\n\n  return (\n    <Layout showNav={true} seomatic={seomatic}>\n      <div className=\"container mx-auto overflow-hidden md:pt-48 pt-24\">\n        <div className=\"md:px-0 px-6\">\n          <div className=\"flex items-center justify-center flex-wrap\">\n            {/* Loop and render each story */}\n            {storyCollections.length > 0 &&\n              storyCollections.map(({ featureImage, entry, comingSoon }, i) => {\n                const [story] = entry\n                const [img] = featureImage\n\n                return (\n                  <div\n                    key={i}\n                    className={`md:w-1/3 w-full mb-6 relative ${\n                      comingSoon ? \"text-grey\" : \"\"\n                    }`}\n                  >\n                    {/* Link wrapper */}\n                    {!comingSoon && (\n                      <TransitionLink\n                        key={i}\n                        to={`/${story && story.uri ? story.uri : ``}`}\n                      >\n                        <StoryBlock\n                          image={getImage(img?.localFile)}\n                          title={story?.title}\n                          comingSoon={comingSoon}\n                          eager={i > 2}\n                        />\n                      </TransitionLink>\n                    )}\n\n                    {/* Static image */}\n                    {comingSoon && (\n                      <StoryBlock\n                        image={getImage(img?.localFile)}\n                        title={story?.title}\n                        comingSoon={comingSoon}\n                        eager={i > 2}\n                      />\n                    )}\n                  </div>\n                )\n              })}\n          </div>\n        </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  {\n    craftStoriesIndexStoriesIndexEntry {\n      ... on Craft_storiesIndex_storiesIndex_Entry {\n        storyCollections {\n          ... on Craft_storyCollections_story_BlockType {\n            entry {\n              uri\n              title\n            }\n            comingSoon\n            featureImage {\n              ... on Craft_uploads_Asset {\n                url\n                title\n                hasFocalPoint\n                localFile {\n                  childImageSharp {\n                    gatsbyImageData(\n                      height: 600\n                      width: 800\n                      quality: 100\n                      layout: CONSTRAINED\n                    )\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      seomatic {\n        ... on Craft_SeomaticType {\n          metaJsonLdContainer\n          metaLinkContainer\n          metaScriptContainer\n          metaSiteVarsContainer\n          metaTagContainer\n          metaTitleContainer\n        }\n      }\n    }\n  }\n`\n\nexport default StoriesPage\n"],"sourceRoot":""}